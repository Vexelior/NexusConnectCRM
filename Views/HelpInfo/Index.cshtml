@model NexusConnectCRM.ViewModels.HelpInfoData.HelpInfoIndexViewModel
@inject Microsoft.AspNetCore.Identity.UserManager<NexusConnectCRM.Data.Models.Identity.ApplicationUser> UserManager
@{
    ViewData["Title"] = "Help Tickets";

    if (User.IsInRole("Prospect"))
    {
        Layout = "~/Areas/Prospect/Views/Shared/_ProspectPortalLayout.cshtml";
    }
    else if (User.IsInRole("Customer"))
    {
        Layout = "~/Areas/Customer/Views/Shared/_CustomerPortalLayout.cshtml";
    }
    else if (User.IsInRole("Employee"))
    {
        Layout = "~/Areas/Employee/Views/Shared/_EmployeePortalLayout.cshtml";
    }
    else if (User.IsInRole("Admin") || User.IsInRole("HeadAdmin"))
    {
        Layout = "~/Areas/Admin/Views/Shared/_AdminPortalLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    var id = UserManager.GetUserId(User);
    string firstAndLastName = UserManager.Users.Where(x => x.Id == id).Select(x => x.FirstName + " " + x.LastName).FirstOrDefault();
}

<div class="container mt-3 mb-3" data-aos="fade-left" data-aos-duration="1000">
    <h1 class="text-center">My Tickets</h1>
    <a class="btn default-btn mb-2" href="@Url.Action("Create", "HelpInfo")">New Ticket</a>
    <div class="row mt-3 help-ticket-tabs">
        <div class="col">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" id="openTickets" aria-current="page" href="#">All</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="newTickets" href="#">
                        New
                        @if (Model.NewResponses > 0)
                        {
                            @if (Model.NewResponses > 99)
                            {
                                <span class="badge rounded-pill bg-danger">99+</span>
                            }
                            else
                            {
                                <span class="badge rounded-pill bg-danger">@Model.NewResponses</span>
                            }
                        }
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="pendingTickets" href="#">Pending</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="closedTickets" href="#">Closed</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="rejectedTickets" href="#">Rejected</a>
                </li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="col" id="ticketsDisplay">
                @*Partial View Content Will Go Here*@
            </div>
        </div>
    </div>
    @*Bootstrap Chatbox Modal*@
    <input type="checkbox" id="check">
    <label class="chat-btn" for="check">
        <i class="fa fa-comment comment"></i>
        <i class="fa fa-x close"></i>
    </label>
    <div class="chat-wrapper">
        <div class="chat-header">
            <h6>Chat</h6>
        </div>
        <div class="ps-3">
            <ul id="chat-messages"></ul>
        </div>
        <div class="chat-form">
            <textarea class="form-control" id="Message" placeholder="Message"></textarea>
            <button class="btn default-btn" id="sendMessage">Submit</button>
        </div>
    </div>
</div>

<script src="~/js/HelpIndex.js" asp-append-version="true" defer></script>
<script src='https://cdn.jsdelivr.net/npm/@@microsoft/signalr@8.0.0/dist/browser/signalr.js'></script>

<script>
    const connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementsByClassName("chat-btn")[0].addEventListener("click", function () {
        document.getElementsByClassName("chat-btn")[0].innerHTML = `<i class="fa fa-comment comment"></i><i class="fa fa-x close"></i>`;
    });

    document.getElementById("sendMessage").addEventListener("click", function (event) {
        var user = "@firstAndLastName";
        var message = document.getElementById("Message").value;
        connection.invoke("SendMessage", user, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

    connection.on("ReceiveMessage", function (user, message) {
        // Make the user's name bold and underline it
        if (user == "@firstAndLastName") {
            $(`<li><strong><u><i>You</u></i></strong>: ${message}</li>`).appendTo("#chat-messages");
        } else {
            $(`<li><strong><u>${user}</u></strong>: ${message}</li>`).appendTo("#chat-messages");
            // clear 
            document.getElementsByClassName("chat-btn")[0].innerHTML = "";
            $('.chat-btn')[0].innerHTML = `<span class="badge rounded-pill bg-danger">!</span>`;
        }
        document.getElementById("Message").value = "";
    });
</script>